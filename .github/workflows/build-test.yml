name: Build and test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        type: [release, debug]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Build doctest
        if: ${{ matrix.type == 'debug' }}
        run: |
          git clone https://github.com/doctest/doctest.git
          cd doctest
          mkdir out
          cd out
          cmake ..
          cmake --build .
          sudo cmake --install .

      - name: List presets
        run: cmake --list-presets=all .

      - name: Make preset
        run: cmake --preset linux-${{ matrix.type }}

      - name: Build
        run: cmake --build .
        working-directory: ./out/build/linux-${{ matrix.type }}

      - name: Test
        if: ${{ matrix.type == 'debug' }}
        run: ./IFCA_tests
        working-directory: ./out/build/linux-${{ matrix.type }}/tests/

  windows:
    strategy:
      fail-fast: false
      matrix:
        type: [release, debug]
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Mark OS (windows x64)
        if: ${{ matrix.os == 'windows-latest' }}
        run: echo "JOB_ARCH=x64" >> $env:GITHUB_ENV

      - name: Mark OS (windows x86)
        if: ${{ matrix.os == 'windows-2016' }}
        run: echo "JOB_ARCH=x86" >> $env:GITHUB_ENV

      - name: Download Ninja for CMake
        shell: bash
        run: |
          pwd
          curl -kLSs https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-win.zip --output ninja-win.zip
          unzip ninja-win.zip
          ls -la

      - name: Install Ninja for CMake
        run: |
          Get-ChildItem
          Get-ChildItem -Path C:\Users
          Get-ChildItem -Path "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build"

      - name: List presets
        run: cmake --list-presets=all .

      - name: Make preset
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          git clone https://github.com/doctest/doctest.git
          cd doctest
          mkdir out
          cd out
          cmake ..
          cmake --build .
          cmake --install .
          cd ../..
          cmake --preset ${{ env.JOB_ARCH }}-${{ matrix.type }}
          cd out/build/${{ env.JOB_ARCH }}-${{ matrix.type }}
          cmake --build .

      - name: Test
        if: ${{ matrix.type == 'debug' }}
        run: IFCA_tests.exe
        working-directory: ./out/build/${{ env.JOB_ARCH }}-${{ matrix.type }}/tests